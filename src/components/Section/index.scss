@import '../../styles/helpers';

.section {
    $this: &;

    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    width: 100vw;
    height: 100vh;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    padding: $spacing--small $spacing--medium $spacing;
    background-color: color(primary);

    transition: transform 400ms $ease-in-quart;

    animation: section-z-index-out 400ms linear both;

    @include min-width(md) {
        padding: $spacing--small $spacing $spacing--xlarge;
    }

    &[role='button'] {
        cursor: pointer;
        outline: 0;

        &:hover,
        &:focus {
            &:before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                border: $border-width--medium solid color(neutral, dark);
                animation: section-focus 650ms $ease-out-quart both;
            }
        }
    }

    &__title {
        @include font(header, bold);
        @include font-size(large);
        margin-bottom: 1em;
    }

    &__close {
        pointer-events: none;
        outline: 0;

        position: absolute;
        top: $spacing;
        right: $spacing;
        width: $unit * 5;
        height: $unit * 5;
        border-radius: 50%;
        color: $color-light;
        background-color: color(neutral, dark);

        animation: section-close-out 300ms $ease-in-quart forwards;
        transition: box-shadow 200ms ease-out;

        &:hover,
        &:focus {
            background-color: $color-dark;
        }

        &:focus {
            will-change: box-shadow;
            box-shadow: 0 0 0 $border-width--medium color(neutral, light);
        }
    }

    &__menu {
        &#{$this}__menu {
            display: none;

            position: absolute;
            top: $spacing;
            right: $spacing + $unit * 7;
        }
    }

    &__close-icon {
        display: block;
        transform: rotate(45deg);
        font-size: 24px;

        &:before {
            content: '+';
        }
    }

    &--plot {
        background-color: color(type, plot);
    }

    &--what-how-why {
        background-color: color(type, what-how-why);
    }

    &--priority {
        background-color: color(type, priority);
    }

    &--sliders {
        background-color: color(type, sliders);
    }

    &--timeline {
        background-color: color(type, timeline);
    }

    &--swot {
        background-color: color(type, swot);
    }

    &--core-page {
        background-color: color(type, core-page);
    }

    &--active {
        z-index: 2;
        transform: scale(1.25);
        // transform: scale(1.43);

        box-shadow: 0 0 0 $border-width--medium color(neutral, dark);
        transition: transform 550ms $ease-in-out-quart;

        animation: none;

        #{$this}__close {
            pointer-events: auto;

            animation: section-close-in 700ms $ease-out-quart both;
            animation-delay: 250ms;
        }

        #{$this}__menu {
            display: block;
            animation: section-close-in 700ms $ease-out-quart both;
            animation-delay: 250ms;
        }
    }
}

html:fullscreen {
    .section--focused {
        // @extend .section--active;
    }
}

@keyframes section-z-index-out {
    0% {
        z-index: 2;
    }

    99% {
        z-index: 2;
    }
}

@keyframes section-focus {
    from {
        opacity: 0;
    }
}

@keyframes section-close-in {
    from {
        opacity: 0;
        transform: translate(-0.75em, 0.75em) scale(0.2);
    }
}

@keyframes section-close-out {
    to {
        opacity: 0;
        transform: translate(-0.75em, 0.75em) scale(0.2);
    }
}
